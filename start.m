clear
clc

cities_temp = [
[[-4,4], [-5,3], [2,12], [5,15], [7,17], [10,20], [10,20], [12,23], [10,20], [5,15], [1,10], [-1,4]];
[[6,12], [6,12], [8,16], [11,19], [16,25], [19,29], [22,32], [22,32], [19,28], [16,23], [11,18], [8,14]];
[[13,19], [14,19], [17,23], [21,27], [25,32], [28,34], [29,36], [30,36], [28,34], [24,31], [20,26], [15,21]];
[[19,28], [19,28], [22,30], [24,32], [27,33], [26,32], [25,30], [25,30], [24,30], [24,32], [23,32], [20,30]];
[[8,20], [9,22], [11,25], [14,29], [17,33], [20,35], [22,36], [22,35], [20,33], [18,31], [14,26], [10,20]];
[[13,27], [16,29], [21,34], [24,36], [26,36], [26,33], [26,32], [26,32], [26,32], [24,32], [23,32], [20,30]];
[[22,30], [22,30], [23,31], [24,31], [25,31], [25,30], [25,29], [25,29], [25,30], [24,29], [23,29], [22,30]];
[[-2,2], [-3,2], [-1,5], [3,10], [8,16], [11,20], [14,22], [14,21], [11,18], [7,12], [3,7], [1,4]];
[[13,23], [14,24], [17,28], [19,31], [22,34], [25,36], [28,39], [28,39], [25,37], [21,34], [17,30], [14,26]];
[[-10,9], [-8,10], [-4,17], [0,24], [3,27], [7,30], [8,32], [8,31], [5,27], [0,22], [-3,14], [-8,10]];
[[-3,5], [-6,6], [3,9], [7,13], [10,17], [15,17], [16,24], [16,23], [11,19], [6,13], [3,8], [-2,6]];
[[13,17], [12,16], [15,19], [19,23], [22,27], [25,29], [25,30], [25,30], [25,29], [22,27], [18,23], [14,19]];
[[22,31], [23,32], [23,33], [23,33], [23,32], [23,32], [23,31], [23,32], [23,32], [23,31], [23,31], [23,31]];
[[8,13], [8,14], [9,16], [11,18], [13,21], [16,24], [17,26], [18,27], [17,24], [14,21], [11,17], [8,14]];
[[2,6], [2,7], [3,10], [5,13], [8,17], [11,20], [13,22], [13,21], [11,19], [8,14], [5,10], [3,7]];
[[20,30], [20,31], [22,33], [26,35], [28,39], [27,38], [26,36], [26,35], [25,34], [24,32], [22,30], [21,29]];
[[1,9], [1,12], [3,16], [6,19], [9,24], [13,29], [16,34], [16,33], [13,28], [8,20], [4,14], [1,9]];
[[21,27], [22,27], [24,29], [24,31], [25,31], [25,31], [23,29], [24,28], [25,28], [24,29], [22,28], [22,27]];
[[22,28], [22,29], [22,29], [21,28], [19,25], [18,24], [17,23], [17,23], [17,24], [18,25], [19,27], [21,28]];
[[6,22], [15,23], [17,25], [18,27], [18,27], [18,27], [18,27], [18,26], [18,26], [16,25], [19,27], [21,28]];
[[-13,-6], [-12,-5], [-8,0], [0,8], [7,18], [11,23], [13,24], [11,22], [6,16], [1,8], [-5,0], [-11,-5]];
[[-6,1], [-5,3], [-2,9], [3,14], [7,18], [10,21], [12,23], [11,23], [8,20], [4,13], [0,7], [-4,3]];
[[12,25], [13,26], [14,25], [14,24], [13,22], [12,21], [11,21], [11,21], [11,24], [13,24], [13,23], [13,23]];
[[-2,4], [-3,4], [1,9], [6,15], [12,22], [17,27], [21,29], [20,28], [16,24], [11,19], [5,12], [-2,6]];
[[-2,4], [-3,4], [1,9], [6,15], [12,22], [17,27], [21,29], [20,28], [16,24], [11,19], [5,12], [-2,6]];
[[1,7], [1,7], [2,12], [5,16], [8,19], [12,22], [14,24], [13,24], [11,21], [7,16], [4,10], [1,6]];
[[4,11], [5,13], [7,16], [10,19], [13,23], [17,18], [20,31], [20,31], [17,27], [13,21], [9,16], [5,12]];
[[6,13], [6,14], [7,17], [8,18], [10,19], [11,21], [12,22], [12,22], [12,23], [11,22], [8,18], [6,14]];
[[0,7], [1,6], [1,8], [6,16], [12,22], [16,25], [18,31], [16,30], [9,28], [3,24], [7,19], [1,8]];
[[23,30] [23,30], [24,31], [24,31], [24,30], [25,30], [25,30], [25,30], [24,30], [24,30], [24,30], [23,30]];
[[-9,-5], [-9,-6], [-4,2], [1,8], [6,15], [11,19], [14,22], [13,20], [9,15], [5,9], [1,4], [-2,2]];
[[20,30], [20,30], [18,26], [16,23], [12,20], [5,17], [8,16], [9,17], [11,20], [13,22], [16,26], [20,30]];
[[0,5], [5,8], [10,15], [15,18], [20,25], [28,30], [36,38], [38,40], [29,30], [18,20], [9,12], [-5,0]];
[[0,9], [0,10], [3,13], [9,18], [14,23], [18,25], [22,29], [13,31], [20,27], [13,21], [8,16], [2,21]];
[[-8,-1], [-8,-1], [-4,4], [-2,11], [-8,18], [13,24], [16,27], [16,26], [12,22], [6,14], [-1,17], [-5,1]];
[[-2,1], [-1,3], [1,8], [5,14], [10,19], [13,22], [15,24], [14,23], [11,19], [7,13], [2,7], [1,3]];
[[-11,9], [-8,15], [-7,18], [-1,21], [2,27], [6,30], [10,31], [8,25], [5,23], [3,22], [0,19], [-11,8]]
];


nd = length(cities_temp);
na = length(cities_temp(1,:))/2;
nc = 4;

output = zeros(1,nd);
output(1)=1;output(2)=1;output(8)=1;output(10)=1;output(11)=1;output(14)=1;output(15)=1;output(17)=1;output(21)=1;output(22)=1;output(25)=1;output(26)=1;output(27)=1;output(28)=1;output(29)=1;output(31)=1;output(34)=1;output(35)=1;output(36)=1;output(37)=1;
output(3)=2;output(4)=2;output(5)=2;output(6)=2;output(7)=2;output(9)=2;output(12)=2;output(13)=2;output(16)=2;output(18)=2;output(19)=2;output(24)=2;output(30)=2;
output(20)=3;output(23)=3;output(32)=3;
output(33)=4;

gama = Estimate_gama(cities_temp);


% steps = 1000;
% acu_sum = 0;
% 
% for i=1:steps
%     [Cluster Codebook] = cvKmeans(cities_temp',nc,.05,@intervalDistance);
%     centroids = (reshape(Codebook, 1, numel(Codebook)))';
%     acu_sum = acu_sum + Accuracy_interval(centroids,cities_temp,output);
% end
% 
% acu = (acu_sum/steps)


ite = 1000;

idx = cell(ite,1);
Cs_s = cell(ite,1);

for i=1:ite
    [IDX,C] = cvKmeans(cities_temp',nc,.05,@intervalDistance,true,gama);
    IDX=IDX';
    C=(reshape(C, 1, numel(C)));
    idx{i} = IDX;
    Cs_s{i} = mat2str(sort(C));    
end

[unique_strings, quant, string_map]=unique(Cs_s);
inds = find(string_map == mode(string_map));
ind = inds(1);

centroids = (str2num(Cs_s{ind}))';
idx = idx{ind};

Accuracy_interval(centroids,cities_temp,output)


%Tirando a média
med_cities_temp = zeros(nd,na);

for i=1:nd
    for j=1:na
       new = (cities_temp(i,(j*2-1))+cities_temp(i,j*2))/2;
       med_cities_temp(i,j)=new;
    end
end
%%%


% stepss = 500;
% acc_sum = 0;
% 
% for i=1:stepss
%     [Cluster Codebook] = cvKmeans(med_cities_temp',nc,.05,@cvEucdist);
%     centroids = (reshape(Codebook, 1, numel(Codebook)))';
%     acc_sum = acc_sum + Accuracy_interval(centroids,cities_temp,output);
% end
% 
% acu = (acc_sum/stepss)
% 
% 
% ite = 500;
% 
% idx = cell(ite,1);
% Cs_s = cell(ite,1);
% 
% for i=1:ite
%     [IDX,C] = cvKmeans(med_cities_temp',nc,.05,@cvEucdist);
%     IDX=IDX';
%     C=(reshape(C, 1, numel(C)));
%     idx{i} = IDX;
%     Cs_s{i} = mat2str(sort(C));     
% end
% 
% [unique_strings, quant, string_map]=unique(Cs_s);
% inds = find(string_map == mode(string_map));
% ind = inds(1);
% 
% outputs = mat2str(idx{ind})
% 
% centroids = (str2num(Cs_s{ind}))';
% idx = idx{ind};
% 
% Accuracy(centroids,med_cities_temp,output)


% X = [1 2 2 5;0 3 4 5]
% 
% X =
% 
%      1     2     2     5
%      0     3     4     5
% 
% d = pdist(X,'euclidean')
% 
% d =
% 
%     2.4495
% 
% (1-0)^2+(2-4)^2 + (2-3)^2 + (5-5)^2
% 
% ans =
% 
%      6
% 
% sqrt(6)
% 
% ans =
% 
%     2.4495
% 

